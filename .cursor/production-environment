# Lucrax.ai - Regras do Ambiente de Produção

## Ambiente de Produção
- **URL**: https://lucrax.ai
- **Staging**: https://staging.lucrax.ai
- **Branch**: main
- **Deploy**: Automático via GitHub (push/merge em `main`)
- **Configuração**: Variáveis de ambiente de produção
- **Organização**: INOSX
- **Projeto ID**: prj_ig3SKAuvThlZSSXmxyWxfveweeKH

## Regras de Deploy para Produção

###  Permitido APENAS Quando
- **Solicitação EXPLÍCITA do usuário**: "faça deploy para produção"
- **Solicitação EXPLÍCITA do usuário**: "merge para main"
- **Solicitação EXPLÍCITA do usuário**: "promova para produção"
- Merge aprovado para `main` APÓS solicitação do usuário

###  Proibido SEMPRE
- **NUNCA trabalhar diretamente no branch `main`**
- Deploy manual via CLI sem solicitação
- Push direto para `main` sem solicitação explícita
- Alteração de configurações de produção sem aprovação
- Trabalho de desenvolvimento no branch `main`

## Configurações de Produção

### Variáveis de Ambiente
- NODE_ENV=production
- VERCEL_ENV=production
- DEBUG=false
- LOG_LEVEL=info
- Supabase: Projeto de produção
- OpenAI: API key de produção

### Segurança
- CORS configurado para domínio de produção
- Rate limiting ativado
- Logs de auditoria habilitados
- Monitoramento de performance ativo

### Monitoramento
- Health check: https://lucrax.ai/api/health
- Logs de erro em tempo real
- Métricas de performance
- Alertas de falhas críticas

## Checklist de Deploy para Produção

### Antes do Deploy
- [ ] **Código testado** em staging
- [ ] **Testes de integração** realizados
- [ ] **CHANGELOG.md atualizado**
- [ ] **Documentação atualizada**
- [ ] **Confirmação explícita** do usuário

### Durante o Deploy
- [ ] **Merge em main** concluído
- [ ] **Pipeline do Vercel** finalizado com sucesso
- [ ] **URL de produção** verificada
- [ ] **Funcionalidades testadas**

### Após o Deploy
- [ ] **Monitoramento ativo** por 30 minutos
- [ ] **Logs verificados** para erros
- [ ] **Performance verificada**
- [ ] **Usuários notificados** se necessário

## Rollback de Produção

### Quando Fazer Rollback
- Erro crítico em produção
- Performance degradada
- Falha de segurança
- Solicitação explícita do usuário

### Como Fazer Rollback
```bash
# 1. Selecionar um deployment estável no Vercel
# 2. Usar "Redeploy" ou reatribuir domínio (alias)
# 3. Verificar funcionamento
curl https://lucrax.ai/api/health
```

## Alertas e Notificações

### Deploy de Produção
-  Log: "ATENÇÃO: Deploy de produção realizado"
-  Notificação: "Ambiente de produção atualizado"
-  Email: "Deploy de produção realizado em [timestamp]"

### Falhas Críticas
-  Alerta: "Falha crítica em produção"
-  Notificação: "Ação imediata necessária"
-  Rollback: "Iniciando rollback automático"

## Regras de Acesso

### Quem Pode Fazer Deploy
- Apenas usuário autorizado
- Com confirmação explícita
- Após testes em staging

### Quem Pode Fazer Rollback
- Usuário autorizado
- Em caso de falha crítica
- Com justificativa documentada

## Backup e Recuperação

### Backup Automático
- Backup diário do banco de dados
- Backup semanal dos arquivos
- Backup antes de cada deploy

### Recuperação
- Tempo de recuperação: < 15 minutos
- Procedimento documentado
- Teste mensal de recuperação

## Conformidade e Auditoria

### Logs de Auditoria
- Todas as ações registradas
- Usuário e timestamp
- Justificativa para mudanças

### Conformidade
- LGPD/GDPR compliance
- Segurança de dados
- Backup e recuperação

## Contatos de Emergência

### Em Caso de Falha
1. Verificar logs do Vercel
2. Consultar monitoramento
3. Executar rollback se necessário
4. Notificar usuários afetados

### Escalação
- Nível 1: Verificação automática
- Nível 2: Intervenção manual
- Nível 3: Contato de emergência
