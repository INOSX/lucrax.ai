# dataGPT - Guia de Cria√ß√£o de Regras

## üìã Como Criar Novas Regras

### Formato Obrigat√≥rio
- **Formato**: MDC (Markdown Documentation) do Cursor AI
- **Localiza√ß√£o**: `.cursor/rules/`
- **Extens√£o**: Sem extens√£o (arquivo sem `.md`)
- **Nome**: snake_case descritivo

### Estrutura Padr√£o
```
.cursor/rules/
‚îú‚îÄ‚îÄ rules                    # Regras gerais do projeto
‚îú‚îÄ‚îÄ code-standards          # Padr√µes de c√≥digo
‚îú‚îÄ‚îÄ deployment-rules        # Regras de deploy
‚îú‚îÄ‚îÄ supabase-rules          # Regras do Supabase
‚îú‚îÄ‚îÄ rule-creation-guidelines # Este arquivo
‚îî‚îÄ‚îÄ README                  # √çndice das regras
```

## üéØ Processo de Cria√ß√£o

### 1. Identificar Necessidade
- Nova funcionalidade requer regras espec√≠ficas?
- Padr√£o atual n√£o est√° sendo seguido?
- Nova tecnologia/ferramenta sendo integrada?

### 2. Escolher Nome do Arquivo
```bash
# Padr√µes de nomenclatura
feature-name-rules          # Para funcionalidades espec√≠ficas
technology-rules            # Para tecnologias (ex: vercel-rules)
process-rules               # Para processos (ex: testing-rules)
security-rules              # Para seguran√ßa
performance-rules           # Para performance
```

### 3. Estrutura do Arquivo
```markdown
# dataGPT - [Nome da Regra]

## üéØ Objetivo
Descri√ß√£o clara do que a regra cobre.

## [Se√ß√£o Principal]
Conte√∫do espec√≠fico da regra.

## Exemplos de C√≥digo
```python
# Exemplos pr√°ticos sempre inclu√≠dos
```

## Checklist
- [ ] Item 1
- [ ] Item 2

---

**√öltima atualiza√ß√£o**: [Data]
**Vers√£o**: 1.0
```

### 4. Valida√ß√£o
- [ ] Arquivo sem extens√£o `.md`
- [ ] Nome em snake_case
- [ ] Estrutura MDC correta
- [ ] Exemplos de c√≥digo inclu√≠dos
- [ ] Checklist de valida√ß√£o
- [ ] Data de atualiza√ß√£o

### 5. Atualizar README
Sempre atualizar `.cursor/rules/README` com:
- Nova regra na lista
- Breve descri√ß√£o
- Quando usar

## üìù Template de Nova Regra

```markdown
# dataGPT - [Nome da Regra]

## üéØ Objetivo
[Descri√ß√£o clara do prop√≥sito]

## [Se√ß√£o 1]
[Conte√∫do espec√≠fico]

## [Se√ß√£o 2]
[Conte√∫do espec√≠fico]

## Exemplos
```python
# Exemplo de c√≥digo
def exemplo():
    pass
```

## Padr√µes
- Item 1
- Item 2
- Item 3

## Checklist
- [ ] Verifica√ß√£o 1
- [ ] Verifica√ß√£o 2
- [ ] Verifica√ß√£o 3

## Troubleshooting
### Problema Comum 1
**Solu√ß√£o**: Descri√ß√£o da solu√ß√£o

### Problema Comum 2
**Solu√ß√£o**: Descri√ß√£o da solu√ß√£o

---

**√öltima atualiza√ß√£o**: [DD/MM/AAAA]
**Vers√£o**: 1.0
**Categoria**: [Categoria da regra]
```

## üîç Valida√ß√£o de Regras Existentes

### Checklist de Valida√ß√£o
- [ ] **Formato**: Arquivo sem extens√£o `.md`
- [ ] **Localiza√ß√£o**: Dentro de `.cursor/rules/`
- [ ] **Nomenclatura**: snake_case
- [ ] **Estrutura**: MDC v√°lido
- [ ] **Conte√∫do**: Exemplos e checklists inclu√≠dos
- [ ] **Atualiza√ß√£o**: Data e vers√£o atualizadas

### Arquivos Incorretos a Corrigir
- Arquivos com extens√£o `.md` ‚Üí Remover extens√£o
- Arquivos fora de `.cursor/rules/` ‚Üí Mover para local correto
- Nomes em PascalCase ‚Üí Converter para snake_case
- Estrutura n√£o-MDC ‚Üí Reformatar

## üóëÔ∏è Limpeza de Arquivos Antigos

### Identificar Arquivos Antigos
```bash
# Buscar arquivos .md em .cursor/rules/
find .cursor/rules/ -name "*.md"

# Buscar arquivos fora do diret√≥rio correto
find . -name "*rules*" -not -path "./.cursor/rules/*"
```

### Processo de Limpeza
1. **Identificar** arquivos incorretos
2. **Converter** para formato MDC correto
3. **Mover** para `.cursor/rules/`
4. **Renomear** para snake_case
5. **Deletar** arquivos antigos
6. **Atualizar** README

## üìö Categorias de Regras

### Regras T√©cnicas
- `code-standards` - Padr√µes de c√≥digo
- `api-rules` - Regras de API
- `database-rules` - Regras de banco de dados
- `security-rules` - Regras de seguran√ßa

### Regras de Processo
- `deployment-rules` - Deploy e ambientes
- `testing-rules` - Testes e QA
- `documentation-rules` - Documenta√ß√£o
- `git-rules` - Controle de vers√£o

### Regras de Ferramentas
- `supabase-rules` - Supabase
- `vercel-rules` - Vercel
- `openai-rules` - OpenAI
- `streamlit-rules` - Streamlit

## üîÑ Manuten√ß√£o de Regras

### Atualiza√ß√µes Regulares
- **Semanal**: Revisar regras ativas
- **Mensal**: Atualizar exemplos de c√≥digo
- **Trimestral**: Revisar estrutura geral

### Versionamento
- **v1.0**: Cria√ß√£o inicial
- **v1.1**: Pequenas corre√ß√µes
- **v2.0**: Mudan√ßas significativas

### Depreca√ß√£o
- Marcar regras obsoletas
- Mover para `.cursor/rules/deprecated/`
- Atualizar README

## üö® Regras Cr√≠ticas

### Nunca Fazer
- ‚ùå Criar arquivos `.md` em `.cursor/rules/`
- ‚ùå Usar PascalCase nos nomes
- ‚ùå Colocar regras fora de `.cursor/rules/`
- ‚ùå Criar regras sem exemplos
- ‚ùå Esquecer de atualizar README

### Sempre Fazer
- ‚úÖ Usar formato MDC
- ‚úÖ Incluir exemplos pr√°ticos
- ‚úÖ Adicionar checklists
- ‚úÖ Atualizar data e vers√£o
- ‚úÖ Documentar no README

## üìã Checklist de Nova Regra

### Antes de Criar
- [ ] Verificar se regra j√° existe
- [ ] Definir escopo e objetivo
- [ ] Escolher nome apropriado
- [ ] Planejar estrutura

### Durante a Cria√ß√£o
- [ ] Usar template padr√£o
- [ ] Incluir exemplos de c√≥digo
- [ ] Adicionar checklist de valida√ß√£o
- [ ] Incluir troubleshooting

### Ap√≥s Criar
- [ ] Validar formato MDC
- [ ] Testar exemplos de c√≥digo
- [ ] Atualizar README
- [ ] Fazer commit com mensagem descritiva

---

**√öltima atualiza√ß√£o**: 27/10/2025  
**Vers√£o**: 1.0  
**Categoria**: Meta-regras
